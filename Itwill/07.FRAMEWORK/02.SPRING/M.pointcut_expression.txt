<< 기본 형식 >>
  
 [ execution(수식어패턴? 리턴타입패턴 패키지패턴?이름패턴(파라미터패턴) ]

	● 수식어 패턴
          	- 생략가능한 부분.
          	- public, protected 등이 옴.
        ● 리턴타입패턴
          	- 리턴 타입을 명시
        ● 클래스이름 패턴, 이름패턴
          	- 클래스 이름 및 메서드 이름을 패턴으로 명시.
        ● 파라미터패턴
          	- 매칭될 파라미터에 대해서 명시.
        ○ 특징
        	- 각 패턴은 '*'를 이용하여 모든 값을 표현.
        	- '..'을 이용하여 0개 이상이라는 의미를 표현.
	ex>
		execution(public void set*(..))
  			=> 리턴 타입이 void이고 메서드 이름이 set으로 시작하며, 파라미터가 0개 이상인 메서드
		execution(* sp.aop.service.*.*())
  			=> sp.aop.service 패키지의 파라미터가 없는 모든 메서드
		execution(* sp.aop.service..*.*(..))
  			=> sp.aop.service 패키지 및 하위 패키지에 있는 파라미터가 0개 이상인 모든 메서드
		execution(* get*(*))
  			=> get으로 시작하고 1개의 파라미터를 갖는 메서드
		execution(Integer read*(Integer, ..))
  			=> 리턴 값이 Integer이고 메서드 이름이 read로 시작하며 첫번째 파라미터 타입이 Integer이고, 
			   1개 이상의 파라미터를 갖는 메서드
 
	
	● within 명시자 : 메서드가 아닌 특정 타입에 속하는 메서드를 Pointcut으로 설정할 때 사용
 
	ex>
 	within(sp.aop.service.*)
  		=> sp.aop.service 패키지에 있는 모든 메서드
 	within(sp.aop.service..*)
  		=> sp.aop.service 패키지 및 하위 패키지에 있는 모든 메서드
 
 
 
	● bean 명시자 : 스프링 빈 이름을 이용하여 Pointcut을 정의
 
	ex>
 	bean(faqBoard)
  		=> 이름이 faqBoard인 빈의 메서드 호출
 	bean(*noticeBoard)
  		=> 이름이 noticeBoard로 끝나는 빈의 메서드 호출

	<< 표현식의예 >>
	execution(public * *(..)) : public 메소드가 포인트 컷
	execution(* com.itwill.user.*.*(..)) : com.itwill.user 패키지의 모든 메소드가 포인트 컷
	execution(* com.itwill.user..*.*(..)) : com.itwill.user 패키지와 하위 패키지의 모든 메소드가 포인트 컷
	execution(public void insert*(..)) : public에 리턴값, 패키지명 없고 메서드 이름은 insert로 시작, 인자값은 0개 이상인 메서드가 포인트 컷
	execution(* com.itwill.user.*.*()) : 리턴형 관계없고 com.itwill.user 패키지의 모든 클래스, 인자값이 없는 모든 메서드가 포인트 컷
	execution(* com.itwill.user..*.*(..)) : 리턴형 관계없고 com.itwill.user 패키지 및 하위 패키지에 있는 모든 클래스,  
						인자값이 0개 이상인 메서드가 포인트 컷
	execution(* delete*(*)) : 메서드 이름이 delete으로 시작하는 인자값이 1개인 메서드가 포인트 컷
	execution(* delete*(*,*)) : 메서드 이름이 delete로 시작하는 인자값이 2개인 메서드가 포인트 컷
	execution(* find*(Integer, ..)) : 메서드 이름이 find로 시작하고 첫번째 인자값의 타입이 Integer, 1개 이상의 매개변수를 갖는 메서드가 포인트 컷
	
	within(com.itwill.user.*) : com.itwill.user 패키지 내의 모든 메소드가 포인트 컷
	within(com.itwill.user..*) : com.itwill.user패키지 및 하위 패키지의 모든 메소드가 포인트 컷
	bean(userService*) : 이름이 userService로 시작되는 모든 빈의 메소드가 포인트 컷
	bean(*dataSource) || bean(*DataSource) : 빈 이름이 “dataSource” 나 “DataSource” 으로 끝나는 모든 빈의 메소드가 포인트 컷
	!bean(userService) : userService빈을 제외한 모든 빈의 메소드가 포인트 컷
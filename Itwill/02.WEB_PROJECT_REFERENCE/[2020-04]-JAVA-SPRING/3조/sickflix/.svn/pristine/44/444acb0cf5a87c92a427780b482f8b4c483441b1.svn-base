package itwill.shop.cart;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.naming.InitialContext;
import javax.sql.DataSource;

/*
	 사용자관리에서 데이타베이스와의 작업을 전담하는 클래스
	 CART 테이블에 사용자를 추가,삭제,검색,수정등의 작업을한다.
 */

public class CartDAO {
	
	private DataSource dataSource;
	
	public CartDAO() throws Exception {
		InitialContext ic = new InitialContext();
		dataSource = (DataSource)ic.lookup("java:/comp/env/jdbc/OracleDB");
		System.out.println("CartDAO()생성자 : " + this);
	}
	
	/*
	 * 기존의 카트 정보를 수정
	 */
	public int update(Cart cart) throws Exception {
		Connection con = null;
		PreparedStatement pstmt = null;
		String updateQuery = "update cart set c_item_no = ?,m_id = ?, p_no = ?";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(updateQuery);
			pstmt.setString(1, cart.getC_item_no());
			pstmt.setString(2, cart.getM_id());
			pstmt.setString(3, cart.getP_no());
			int rows = pstmt.executeUpdate();
			return rows;
		} finally {
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
	}
	/*
	 * 
	 */
	public int remove(String c_item_no) throws Exception {
		Connection con = null;
		PreparedStatement pstmt = null;
		String removeQuery = "delete from cart where cart_item_no = ?";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(removeQuery);
			pstmt.setString(1, c_item_no);
			int rows = pstmt.executeUpdate();
			return rows;
		} finally {
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
	}
	
	public Cart findCart(String c_item_no) throws Exception {
		Cart cart = null;
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String selectQuery = "select c_item_no,m_id,p_no from cart where c_item_no = ?";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(selectQuery);
			pstmt.setString(1, c_item_no);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				cart = new Cart(rs.getString("c_item_no"),
								rs.getString("m_id"),
								rs.getString("p_no"));
			}
		} finally {
			if (rs != null)
				rs.close();
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
		return cart;
	}
	public ArrayList<Cart> findCartList() throws Exception {
		ArrayList<Cart> cartList = new ArrayList<Cart>();
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String selectQuery = "select c_item_no,m_id,p_no from cart";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(selectQuery);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				cartList.add(new Cart(
							rs.getString("c_item_no"),
							rs.getString("m_id"),
							rs.getString("p_no")));
			}
		} finally {
			if (rs != null)
				rs.close();
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
		return cartList;
	}
	
}

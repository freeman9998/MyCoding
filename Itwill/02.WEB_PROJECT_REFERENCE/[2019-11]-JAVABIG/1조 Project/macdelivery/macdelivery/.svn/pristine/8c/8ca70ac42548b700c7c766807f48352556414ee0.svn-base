package com.itwill.member.model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.naming.InitialContext;
import javax.sql.DataSource;

public class MemberDao {
	private DataSource dataSource;

	public MemberDao() throws Exception {
		InitialContext ic = new InitialContext();
		dataSource = (DataSource) ic.lookup("java:/comp/env/jdbc/OracleDB");
	}

	public int create(Member member) throws Exception {
		Connection con = null;
		PreparedStatement pstmt = null;
		String insertQuery = "insert into Member values(seq_member_no.nextval,?,?,?,?,?,?,?);";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(insertQuery);
			pstmt.setString(1, member.getM_id());
			pstmt.setString(2, member.getM_pwd());
			pstmt.setString(3, member.getM_name());
			pstmt.setString(4, member.getM_jumin());
			pstmt.setString(5, member.getM_phone());
			pstmt.setString(6, member.getM_email());
			pstmt.setString(7, member.getM_address());
			int rows = pstmt.executeUpdate();
			return rows;
		} finally {
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
	}

	public int update(Member member) throws Exception {
		Connection con = null;
		PreparedStatement pstmt = null;
		String updateQuery = "update Member set m_pwd=?,m_phone=?,m_email=?,m_address=? where m_no=? ";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(updateQuery);
			pstmt.setString(1, member.getM_pwd());
			pstmt.setString(2, member.getM_phone());
			pstmt.setString(3, member.getM_email());
			pstmt.setString(4, member.getM_address());
			pstmt.setInt(5, member.getM_no());
			int rows = pstmt.executeUpdate();
			return rows;
		} finally {
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
	}

	public int delete(int m_no) throws Exception {
		Connection con = null;
		PreparedStatement pstmt = null;
		String deleteQuery = "delete from Member where m_no=?";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(deleteQuery);
			pstmt.setInt(1, m_no);
			int rows = pstmt.executeUpdate();
			return rows;
		} finally {
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
	}

	public Member findMember(int m_no) throws Exception {
		Member member = null;
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String selectQuery = "select m_no,m_id,m_pwd,m_name,m_jumin,m_phone,m_email,m_address from Member where m_no=?";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(selectQuery);
			pstmt.setInt(1, m_no);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				member = new Member(rs.getInt(m_no), rs.getString("m_id"), rs.getString("m_pwd"),
						rs.getString("m_name"), rs.getString("m_jumin"), rs.getString("m_phone"),
						rs.getString("m_email"),rs.getString("m_address"));
			}
		} finally {
			if (rs != null)
				rs.close();
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
		return member;
	}
	public Member findMember(String m_id) throws Exception{
		Member member = null;
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String selectQuery = "select m_no,m_id,m_pwd,m_name,m_jumin,m_phone,m_email,m_address from Member where m_id=?";
		try {
			con = dataSource.getConnection();
			pstmt = con.prepareStatement(selectQuery);
			pstmt.setString(1, m_id);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				member = new Member(rs.getInt(m_id), rs.getString("m_id"), rs.getString("m_pwd"),
						rs.getString("m_name"), rs.getString("m_jumin"), rs.getString("m_phone"),
						rs.getString("m_email"),rs.getString("m_address"));
			}
		} finally {
			if (rs != null)
				rs.close();
			if (pstmt != null)
				pstmt.close();
			if (con != null)
				con.close();
		}
		return member; 
	}
	public boolean existedMember(String m_id)throws Exception{
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String existedQuery="select count(*) cnt from Member where m_id=?";
		try{
			con=dataSource.getConnection();
			pstmt=con.prepareStatement(existedQuery);
			pstmt.setString(1, m_id);
			rs=pstmt.executeQuery();
			int count=0;
			if(rs.next()){
				count=rs.getInt("cnt");
			}
			if(count==1){
				return true;
			}else{
				return false;
			}
		}finally{
			if(rs!=null)
				rs.close();
			if(pstmt!=null)
				pstmt.close();
			if(con!=null)
				con.close();
		}
		
	}

}

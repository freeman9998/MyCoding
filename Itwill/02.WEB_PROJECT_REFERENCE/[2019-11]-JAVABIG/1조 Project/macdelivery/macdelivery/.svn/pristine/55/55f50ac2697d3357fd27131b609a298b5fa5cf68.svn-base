package com.itwill.jumun;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.naming.InitialContext;
import javax.sql.DataSource;

public class JumunDao {
	private DataSource ds;

	public JumunDao() throws Exception {
		InitialContext ic = new InitialContext();
		ds = (DataSource) ic.lookup("java:/comp/env/jdbc/OracleDB");
	}

	/*
	 * READ ALL
	 */
	public ArrayList<Jumun> selectAll() throws Exception {
		ArrayList<Jumun> jumunList = new ArrayList<Jumun>();
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
		conn = ds.getConnection();
		pstmt = conn.prepareStatement(JumunSQL.JUMUN_SELECT_ALL);
		rs = pstmt.executeQuery();

		while (rs.next()) {
			jumunList.add(new Jumun(rs.getInt("j_no"), rs.getInt("m_no"), rs.getString("j_date"), rs.getInt("j_price"),
					rs.getString("j_address"), rs.getString("j_demand")));
		}
	} finally {
		if (rs != null)
			rs.close();
		if (pstmt != null)
			pstmt.close();
		if (conn!= null)
			conn.close();
	}
		return jumunList;
	}

	/*
	 * CREATE
	 */
	public boolean insertJumun(Jumun jumun) throws Exception {
		boolean isSuccess = false;
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(JumunSQL.JUMUN_INSERT);
			pstmt.setInt(1, jumun.getJ_no());
			pstmt.setInt(2, jumun.getM_no());
			pstmt.setString(3, jumun.getJ_date());
			pstmt.setInt(4, jumun.getJ_price());
			pstmt.setString(5, jumun.getJ_address());
			pstmt.setString(6, jumun.getJ_demand());
			int insertRowCount = pstmt.executeUpdate();
			if (insertRowCount == 1) {
				isSuccess = true;
			}
		} catch (Exception e) {
			isSuccess = false;
		} finally {
			if (conn != null)
				conn.close();
		}

		return isSuccess;
	}

	/*
	 * READ ONE
	 */
	public Jumun selectByNo(int j_no) throws Exception {
		Jumun jumun = null;
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
		conn = ds.getConnection();
		pstmt = conn.prepareStatement(JumunSQL.JUMUN_SELECT_BY_NO);
		pstmt.setInt(1, j_no);
		rs = pstmt.executeQuery();
		if (rs.next()) {
			jumun = new Jumun(rs.getInt("j_no"), rs.getInt("m_no"), rs.getString("j_date"), rs.getInt("j_price"),
					rs.getString("j_address"), rs.getString("j_demand"));
		}
		}finally {
			if (conn != null)
				conn.close();
		}
		return jumun;
	}
	/*
	 * DELETE
	 */
	public boolean deleteJumun(int j_no) throws Exception{
		boolean deleteOK=false;
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
		conn=ds.getConnection();
		pstmt = conn.prepareStatement(JumunSQL.JUMUN_DELETE);
		pstmt.setInt(1, j_no);
		pstmt.executeUpdate();
		deleteOK=true;
		}catch(Exception e) {
			deleteOK=false;
			e.printStackTrace();
		}finally {
			if(conn!=null)
				conn.close();
		}
		return deleteOK;	
	}
	
}
